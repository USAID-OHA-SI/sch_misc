# PURPOSE: Munge and Analysis of PSM subcontractor data
# AUTHOR: jdavis, liz callahan | sch
# LICENSE: MIT
# DATE: 2022-10-18
# NOTES: Read in and munge PSM subcontractor data

# LOCALS & SETUP ============================================================================

# Libraries

library(glitr)
library(glamr)
library(gisr)
library(Wavelength)
library(gophr)
library(tidyverse)
library(scales)
library(sf)
library(extrafont)
library(tidytext)
library(patchwork)
library(ggtext)
library(here)
library(googlesheets4)
library(googledrive)
library(readxl)
library(janitor)
library(lubridate)



# Set paths
data   <- "Data"
dataout <- "Dataout"
images  <- "Images"
graphs  <- "Graphics"

# merdata <- glamr::si_path("path_msd")
# rasdata <- glamr::si_path("path_raster")
# shpdata <- glamr::si_path("path_vector")
# datim   <- glamr::si_path("path_datim")


# Functions
glamr::load_secrets()


# LOAD DATA ============================================================================

#read in PSM subcontractor data as shared by A Greve 10.13.22

#url orignial data <- "https://docs.google.com/spreadsheets/d/1lOCGOLsvmvrIzz-0pYGuwGw8sfXaQSyd"

#url for correct price <- "https://docs.google.com/spreadsheets/d/1Ag-ejQD8EoISNQQ6yG2ldTJL2nnYnEo0lmkuM3Ny1P8/edit#gid=1605651247"

raw <- read_xlsx(here("Data", "ILA/GHSC-PSM_CPSR_Subcontract.xlsx"),
                 sheet = "First Round Data",
                 skip = 4) %>%
  janitor::clean_names() %>%
  mutate(n = as.double(x1))


bad_dates <- c("Jan-31-2017",
               "Oct-1-2020",
               "Base Year: 10/1/2017\nOption 1: 10/1/ 2018 \nOption 2: 10/1/2019 \nOption 3: 10/1/2020",
               "Jan-31-2017",
               "Jan-1-20")

# MUNGE ============================================================================


#remove obs with no $ per Ashley, fix date

subs <- raw %>%
  filter(str_detect(proposed_subcontract_price_far_52_244_2_e_1_iv,
                    "Ceiling|Subcontract",
                    negate = T),
         local_international == "Local") %>%
  mutate(fy = case_when(estimated_executed_date == "Oct-1-2020" ~ "FY21",
                        estimated_executed_date == "Base Year: 10/1/2017\nOption 1: 10/1/ 2018 \nOption 2: 10/1/2019 \nOption 3: 10/1/2020" ~ "FY18",
                        estimated_executed_date == "Jan-31-2017" ~ "FY17",
                        estimated_executed_date == "Jan-1-20" ~ "FY20",
                        TRUE ~ "NA"),
         estimated_executed_date = ifelse(estimated_executed_date %in% bad_dates,
                                          yes = NA,
                                          no = estimated_executed_date),
         estimated_executed_date = str_remove(estimated_executed_date, ".0$"),
         estimated_executed_date = as.numeric(estimated_executed_date),
         estimated_executed_date = as.Date(estimated_executed_date, origin="1899-12-30"),
         finstart = ymd(paste0(year(estimated_executed_date), "-10-01")),
         fy = ifelse(estimated_executed_date >= finstart, year(finstart) + 1, year(finstart))) %>%
  mutate(country = case_when(country == "All" ~ "Kenya",
                             TRUE ~ country))

#export a version to fix the $

subs %>% select(n, subcontract_number,
                fy,
                estimated_executed_date,
                proposed_subcontract_price_far_52_244_2_e_1_iv,
                identification_of_the_proposed_subcontractor_far_52_244_2_e_1_iii,
                subcontract_number) %>%
  mutate(correct_price = NA) %>%
  relocate(identification_of_the_proposed_subcontractor_far_52_244_2_e_1_iii, .after = last_col()) %>%
  googlesheets4::sheet_write(as_id("1Ag-ejQD8EoISNQQ6yG2ldTJL2nnYnEo0lmkuM3Ny1P8"),
                             sheet = "ila_subs_tocorrect")

#read-in fixed $
# clean up to account for obs with missing 'n' value

raw2 <- read_sheet(as_id("1Ag-ejQD8EoISNQQ6yG2ldTJL2nnYnEo0lmkuM3Ny1P8"),
                   sheet = "ila_subs_tocorrect",
                   col_types = ("dccDcdc"))

df_prices <- raw2 %>%
  filter(!is.na(n)) %>%
  select(n, correct_price)

#join correct prices to the original dataset
# ifelse for populating the is.na(n) problem

joint <- subs %>%
  left_join(df_prices, by = 'n') %>%
  mutate(correct_price = ifelse(is.na(n), proposed_subcontract_price_far_52_244_2_e_1_iv,
                                correct_price))
joint2 <- joint %>%
  group_by(country, fy) %>%
  mutate(correct_price = as.numeric(correct_price)) %>%
  summarise(correct_price= sum(correct_price))

joint2<- joint %>%
  group_by(country, fy) %>%
  mutate(correct_price = as.numeric(correct_price),
         fy = as.character(fy)) %>%
  summarise(correct_price= sum(correct_price))

#bringing in GHSC-PSM budgets
totalbudgets_df <- read_xlsx(here("Data", "ILA/OAL_GHSC PSM.xlsx"),
                                 sheet = "Data") %>%
  rename(country = `Operating Unit`, fy= `Original Fiscal Year`) %>%
  mutate(country = case_when(country == "ANGOLA" ~ "Angola",
                             country == "BURKINA" ~ "Burkina Faso",
                             country == "BURUNDI" ~ "Burundi",
                             country == "CAMEROON" ~ "Cameroon",
                             country == "ELSALVADOR" ~ "Central America Region" ,
                             country == "GUATEMALA"  ~ "Central America Region" ,
                             country == "HONDURAS" ~ "Central America Region" ,
                             country == "PANAMA" ~ "Central America Region" ,
                             country == "DROC" ~ "DRC",
                             country == "ETHIOPIA" ~ "Ethiopia",
                             country == "GHANA" ~ "Ghana",
                             country == "GUINEA" ~ "Guinea",
                             country == "HAITI" ~ "Haiti",
                             country == "KENYA" ~ "Kenya",
                             country == "MADAGASCAR" ~ "Madagascar",
                             country == "MALAWI" ~ "Malawi",
                             country == "MOZAMBIQUE" ~ "Mozambique",
                             country == "NEPAL" ~ "Nepal",
                             country == "NIGER" ~ "Niger",
                             country == "NIGERIA" ~ "Nigeria",
                             country == "PAKISTAN" ~ "Pakistan",
                             country == "PAKISTAN2" ~ "Pakistan",
                             country == "RWANDA" ~ "Rwanda",
                             country == "SIERRA_L" ~ "Sierra Leone",
                             country == "SOUTH_AFR" ~ "South Africa",
                             country == "SUDAN_SOUTH" ~ "South Sudan",
                             country == "UGANDA" ~ "Uganda",
                             country == "ZAMBIA" ~ "Zambia",
                             country == "ZIMBABWE" ~ "Zimbabwe")) %>%
  group_by(country, fy) %>%
  summarise(Obligation_Amount = sum(`Fund Crcy Obligation Amt`))

#joining budgets dataset with correct prices dataset
finaljoint <- joint2 %>%
  right_join(totalbudgets_df, by = c( 'country', "fy")) %>%
  filter(!is.na(correct_price)) %>%
  mutate(percentage_of_obligated_funds_used = (correct_price/Obligation_Amount)) %>%
  googlesheets4::sheet_write(as_id("1Ag-ejQD8EoISNQQ6yG2ldTJL2nnYnEo0lmkuM3Ny1P8"),
                           sheet = "ila_subcontracts_with_budget_allocations")
